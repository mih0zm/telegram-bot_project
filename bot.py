import telebot
from telebot import types
from config import TOKEN
from logic import init_db, add_user
import sqlite3

bot = telebot.TeleBot(TOKEN)
init_db()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    add_user(message.chat.id, message.from_user.username)

    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("üìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data="day_06.10.2025"),
        types.InlineKeyboardButton("üìÖ –í—Ç–æ—Ä–Ω–∏–∫", callback_data="day_07.10.2025"),
        types.InlineKeyboardButton("üìÖ –°—Ä–µ–¥–∞", callback_data="day_08.10.2025"),
        types.InlineKeyboardButton("üìÖ –ß–µ—Ç–≤–µ—Ä–≥", callback_data="day_09.10.2025"),
        types.InlineKeyboardButton("üìÖ –ü—è—Ç–Ω–∏—Ü–∞", callback_data="day_10.10.2025"),
        types.InlineKeyboardButton("üìñ –í—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="all_schedule")
    )

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —É—Ä–æ–∫–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—éüìö." \
        "\n–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:",
        reply_markup=markup
    )

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –¥–Ω—é
@bot.callback_query_handler(func=lambda call: call.data.startswith("day_"))
def show_day_schedule(call):
    date = call.data.replace("day_", "")
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    cursor.execute('SELECT subject, time, teacher, link FROM schedule WHERE date = ?', (date,))
    lessons = cursor.fetchall()
    conn.close()

    if not lessons:
        bot.send_message(call.message.chat.id, f"‚ùå –ù–∞ {date} —É—Ä–æ–∫–æ–≤ –Ω–µ—Ç.")
    else:
        text = f"üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date}:*\n\n"
        for subject, time, teacher, link in lessons:
            text += f"üìñ *{subject}*\n‚è∞ {time}\nüë©‚Äçüè´ {teacher}\nüîó [{link}]({link})\n\n"
        bot.send_message(call.message.chat.id, text, parse_mode="Markdown")

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é
@bot.callback_query_handler(func=lambda call: call.data == "all_schedule")
def show_all_schedule(call):
    conn = sqlite3.connect('schedule.db')
    cursor = conn.cursor()
    cursor.execute('SELECT subject, date, time, teacher, link FROM schedule ORDER BY date, time')
    lessons = cursor.fetchall()
    conn.close()

    if not lessons:
        bot.send_message(call.message.chat.id, "‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –ø—É—Å—Ç–æ–µ.")
    else:
        text = "üìö *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é:*\n\n"
        current_date = ""
        for subject, date, time, teacher, link in lessons:
            if date != current_date:
                text += f"üóì *{date}:*\n"
                current_date = date
            text += f"  ‚Ä¢ *{subject}* ({time}) ‚Äî {teacher}\n"
        bot.send_message(call.message.chat.id, text, parse_mode="Markdown")

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)


    

